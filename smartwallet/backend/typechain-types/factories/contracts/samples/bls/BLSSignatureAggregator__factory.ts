/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BLSSignatureAggregator,
  BLSSignatureAggregatorInterface,
} from "../../../../contracts/samples/bls/BLSSignatureAggregator";

const _abi = [
  {
    inputs: [],
    name: "BLS_DOMAIN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
    ],
    name: "aggregateSignatures",
    outputs: [
      {
        internalType: "bytes",
        name: "aggregatedSignature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTrailingPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "publicKey",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "userOpToMessage",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "validateUserOpSignature",
    outputs: [
      {
        internalType: "bytes",
        name: "sigForUserOp",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612b81806100206000396000f3fe6080604052600436106100905760003560e01c806364c530cd1161005957806364c530cd14610193578063a6193531146101d0578063b7620eb41461020d578063c9e525df1461024a578063e3563a4f1461027557610090565b80629d925014610095578063275e2d79146100c057806340864431146100fd578063451711591461013a57806357f09b7214610156575b600080fd5b3480156100a157600080fd5b506100aa61029e565b6040516100b79190611513565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e291906115a7565b6102c2565b6040516100f49190611684565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f91906119f0565b610419565b6040516101319190611ae4565b60405180910390f35b610154600480360381019061014f9190611b79565b610448565b005b34801561016257600080fd5b5061017d600480360381019061017891906119f0565b6104b8565b60405161018a9190611c3d565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190611c7d565b610569565b6040516101c79190611684565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f291906119f0565b610697565b6040516102049190611513565b60405180910390f35b34801561021957600080fd5b50610234600480360381019061022f9190611cc6565b6106bf565b6040516102419190611c3d565b60405180910390f35b34801561025657600080fd5b5061025f61073f565b60405161026c9190611d1e565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190611d8f565b610763565b005b7fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b81565b606060008383905067ffffffffffffffff8111156102e3576102e26116ab565b5b60405190808252806020026020018201604052801561031c57816020015b61030961149c565b8152602001906001900390816103015790505b50905060005b81518110156103b65760008086868481811061034157610340611e10565b5b90506020028101906103539190611e4e565b8061014001906103639190611e77565b8101906103709190611eda565b9150915060405180604001604052808381526020018281525084848151811061039c5761039b611e10565b5b602002602001018190525050508080600101915050610322565b5060006103e3827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476109f6565b905080600001518160200151604051602001610400929190611f1a565b6040516020818303038152906040529250505092915050565b6104216114b6565b600061043461042f846104b8565b610af3565b90506104408382610b23565b915050919050565b8173ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016104829190611f52565b6000604051808303818588803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b50505050505050565b6104c06114d8565b6000826040015190506000815111156104e3576104dc816106bf565b9150610562565b826000015173ffffffffffffffffffffffffffffffffffffffff1663e02afbae61c3506040518263ffffffff1660e01b81526004016080604051808303818786fa158015610535573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061055a9190612033565b915050610564565b505b919050565b606060008280610140019061057e9190611e77565b81019061058b9190612111565b905060006105a18461059c9061213e565b6104b8565b905060006105c0856105b29061213e565b6105bb84610af3565b610b23565b905073__$b745eded4b1aee1100521038d570dd85f1$__63ebbdac918484846040518463ffffffff1660e01b81526004016105fd9392919061223c565b602060405180830381865af415801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e91906122ac565b61067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490612336565b60405180910390fd5b604051806020016040528060008152509350505050919050565b6000806106ab6106a6846104b8565b610af3565b90506106b78382610bfa565b915050919050565b6106c76114d8565b60008251905060808111610710576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610707906123a2565b60405180910390fd5b606081840103805183526020810151602084015260408101516040840152606081015160608401525050919050565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781565b604082829050146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a09061240e565b60405180910390fd5b600082828101906107ba9190612111565b9050600085859050905060008167ffffffffffffffff8111156107e0576107df6116ab565b5b60405190808252806020026020018201604052801561081957816020015b6108066114d8565b8152602001906001900390816107fe5790505b50905060008267ffffffffffffffff811115610838576108376116ab565b5b60405190808252806020026020018201604052801561087157816020015b61085e6114b6565b8152602001906001900390816108565790505b50905060005b8381101561093057600089898381811061089457610893611e10565b5b90506020028101906108a69190611e4e565b6108af9061213e565b90506108ba816104b8565b8483815181106108cd576108cc611e10565b5b6020026020010181905250610904816108ff8685815181106108f2576108f1611e10565b5b6020026020010151610af3565b610b23565b83838151811061091757610916611e10565b5b6020026020010181905250508080600101915050610877565b5073__$b745eded4b1aee1100521038d570dd85f1$__63914137638584846040518463ffffffff1660e01b815260040161096c93929190612650565b602060405180830381865af4158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad91906122ac565b6109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e3906126e1565b60405180910390fd5b5050505050505050565b6109fe61149c565b600083600081518110610a1457610a13611e10565b5b6020026020010151600001519050600084600081518110610a3857610a37611e10565b5b60200260200101516020015190506000600190506000600190505b8651811015610ac157610aa88484848a8581518110610a7557610a74611e10565b5b6020026020010151600001518b8681518110610a9457610a93611e10565b5b60200260200101516020015160018c610c39565b8094508195508296505050508080600101915050610a53565b50610ace838383886112b8565b8093508194505050828460000181815250508184602001818152505050505092915050565b600081604051602001610b069190611c3d565b604051602081830303815290604052805190602001209050919050565b610b2b6114b6565b6000610b378484610bfa565b905073__$b745eded4b1aee1100521038d570dd85f1$__63a850a9097fd84c4373167c517e9ccd66803f86d8a4f49e7e1315a7a73b516affea7428f82b83604051602001610b859190612722565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401610bb1929190612796565b6040805180830381865af4158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190612851565b91505092915050565b6000610c058361132f565b823046604051602001610c1b949392919061288d565b60405160208183030381529060405280519060200120905092915050565b6000806000808a148015610c4d5750600089145b15610c60578686869250925092506112ab565b600087148015610c705750600086145b15610c83578989899250925092506112ab565b610c8b6114d8565b8480610c9a57610c996128d2565b5b898a0981600060048110610cb157610cb0611e10565b5b6020020181815250508480610cc957610cc86128d2565b5b81600060048110610cdd57610cdc611e10565b5b60200201518a0981600160048110610cf857610cf7611e10565b5b6020020181815250508480610d1057610d0f6128d2565b5b86870981600260048110610d2757610d26611e10565b5b6020020181815250508480610d3f57610d3e6128d2565b5b81600260048110610d5357610d52611e10565b5b6020020151870981600360048110610d6e57610d6d611e10565b5b60200201818152505060405180608001604052808680610d9157610d906128d2565b5b83600260048110610da557610da4611e10565b5b60200201518e0981526020018680610dc057610dbf6128d2565b5b83600360048110610dd457610dd3611e10565b5b60200201518d0981526020018680610def57610dee6128d2565b5b83600060048110610e0357610e02611e10565b5b60200201518b0981526020018680610e1e57610e1d6128d2565b5b83600160048110610e3257610e31611e10565b5b60200201518a09815250905080600260048110610e5257610e51611e10565b5b602002015181600060048110610e6b57610e6a611e10565b5b6020020151141580610ead575080600360048110610e8c57610e8b611e10565b5b602002015181600160048110610ea557610ea4611e10565b5b602002015114155b610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee39061294d565b60405180910390fd5b610ef46114d8565b8580610f0357610f026128d2565b5b82600060048110610f1757610f16611e10565b5b602002015187610f27919061299c565b83600260048110610f3b57610f3a611e10565b5b60200201510881600060048110610f5557610f54611e10565b5b6020020181815250508580610f6d57610f6c6128d2565b5b82600160048110610f8157610f80611e10565b5b602002015187610f91919061299c565b83600360048110610fa557610fa4611e10565b5b60200201510881600160048110610fbf57610fbe611e10565b5b6020020181815250508580610fd757610fd66128d2565b5b81600060048110610feb57610fea611e10565b5b60200201518260006004811061100457611003611e10565b5b6020020151098160026004811061101e5761101d611e10565b5b6020020181815250508580611036576110356128d2565b5b8160006004811061104a57611049611e10565b5b60200201518260026004811061106357611062611e10565b5b6020020151098160036004811061107d5761107c611e10565b5b60200201818152505060008680611097576110966128d2565b5b826003600481106110ab576110aa611e10565b5b6020020151886110bb919061299c565b88806110ca576110c96128d2565b5b846001600481106110de576110dd611e10565b5b6020020151856001600481106110f7576110f6611e10565b5b602002015109089050868061110f5761110e6128d2565b5b878061111e5761111d6128d2565b5b888061112d5761112c6128d2565b5b8460026004811061114157611140611e10565b5b60200201518660006004811061115a57611159611e10565b5b6020020151096002098861116e919061299c565b8208905060008780611183576111826128d2565b5b8880611192576111916128d2565b5b838a61119e919061299c565b8a806111ad576111ac6128d2565b5b866002600481106111c1576111c0611e10565b5b6020020151886000600481106111da576111d9611e10565b5b60200201510908846001600481106111f5576111f4611e10565b5b6020020151099050878061120c5761120b6128d2565b5b888061121b5761121a6128d2565b5b8460036004811061122f5761122e611e10565b5b60200201518660016004811061124857611247611e10565b5b60200201510989611259919061299c565b820890506000888061126e5761126d6128d2565b5b898061127d5761127c6128d2565b5b8b8f098560006004811061129457611293611e10565b5b602002015109905082828297509750975050505050505b9750975097945050505050565b60008060006112c785856113b0565b9050600084806112da576112d96128d2565b5b8283099050600085806112f0576112ef6128d2565b5b828a09905060008680611306576113056128d2565b5b8780611315576113146128d2565b5b8486098a0990508181955095505050505094509492505050565b60008160000151826020015183604001518051906020012084606001518051906020012085608001518660a001518760c001518860e001518961010001518a6101200151805190602001206040516020016113939a999897969594939291906129d0565b604051602081830303815290604052805190602001209050919050565b60008083141580156113c25750818314155b80156113cf575060008214155b61140e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140590612ab8565b60405180910390fd5b60008060019050600084905060005b6000871461148f5786826114319190612ad8565b9050828680611443576114426128d2565b5b8780611452576114516128d2565b5b85840988611460919061299c565b860880945081955050508687826114779190612b09565b83611482919061299c565b809850819350505061141d565b8394505050505092915050565b604051806040016040528060008152602001600081525090565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b6000819050919050565b61150d816114fa565b82525050565b60006020820190506115286000830184611504565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261156757611566611542565b5b8235905067ffffffffffffffff81111561158457611583611547565b5b6020830191508360208202830111156115a05761159f61154c565b5b9250929050565b600080602083850312156115be576115bd611538565b5b600083013567ffffffffffffffff8111156115dc576115db61153d565b5b6115e885828601611551565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561162e578082015181840152602081019050611613565b60008484015250505050565b6000601f19601f8301169050919050565b6000611656826115f4565b61166081856115ff565b9350611670818560208601611610565b6116798161163a565b840191505092915050565b6000602082019050818103600083015261169e818461164b565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116e38261163a565b810181811067ffffffffffffffff82111715611702576117016116ab565b5b80604052505050565b600061171561152e565b905061172182826116da565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117568261172b565b9050919050565b6117668161174b565b811461177157600080fd5b50565b6000813590506117838161175d565b92915050565b6000819050919050565b61179c81611789565b81146117a757600080fd5b50565b6000813590506117b981611793565b92915050565b600080fd5b600067ffffffffffffffff8211156117df576117de6116ab565b5b6117e88261163a565b9050602081019050919050565b82818337600083830152505050565b6000611817611812846117c4565b61170b565b905082815260208101848484011115611833576118326117bf565b5b61183e8482856117f5565b509392505050565b600082601f83011261185b5761185a611542565b5b813561186b848260208601611804565b91505092915050565b6000610160828403121561188b5761188a6116a6565b5b61189661016061170b565b905060006118a684828501611774565b60008301525060206118ba848285016117aa565b602083015250604082013567ffffffffffffffff8111156118de576118dd611726565b5b6118ea84828501611846565b604083015250606082013567ffffffffffffffff81111561190e5761190d611726565b5b61191a84828501611846565b606083015250608061192e848285016117aa565b60808301525060a0611942848285016117aa565b60a08301525060c0611956848285016117aa565b60c08301525060e061196a848285016117aa565b60e08301525061010061197f848285016117aa565b6101008301525061012082013567ffffffffffffffff8111156119a5576119a4611726565b5b6119b184828501611846565b6101208301525061014082013567ffffffffffffffff8111156119d7576119d6611726565b5b6119e384828501611846565b6101408301525092915050565b600060208284031215611a0657611a05611538565b5b600082013567ffffffffffffffff811115611a2457611a2361153d565b5b611a3084828501611874565b91505092915050565b600060029050919050565b600081905092915050565b6000819050919050565b611a6281611789565b82525050565b6000611a748383611a59565b60208301905092915050565b6000602082019050919050565b611a9681611a39565b611aa08184611a44565b9250611aab82611a4f565b8060005b83811015611adc578151611ac38782611a68565b9650611ace83611a80565b925050600181019050611aaf565b505050505050565b6000604082019050611af96000830184611a8d565b92915050565b6000611b0a8261174b565b9050919050565b611b1a81611aff565b8114611b2557600080fd5b50565b600081359050611b3781611b11565b92915050565b600063ffffffff82169050919050565b611b5681611b3d565b8114611b6157600080fd5b50565b600081359050611b7381611b4d565b92915050565b60008060408385031215611b9057611b8f611538565b5b6000611b9e85828601611b28565b9250506020611baf85828601611b64565b9150509250929050565b600060049050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b611bef81611bb9565b611bf98184611bc4565b9250611c0482611bcf565b8060005b83811015611c35578151611c1c8782611a68565b9650611c2783611bd9565b925050600181019050611c08565b505050505050565b6000608082019050611c526000830184611be6565b92915050565b600080fd5b60006101608284031215611c7457611c73611c58565b5b81905092915050565b600060208284031215611c9357611c92611538565b5b600082013567ffffffffffffffff811115611cb157611cb061153d565b5b611cbd84828501611c5d565b91505092915050565b600060208284031215611cdc57611cdb611538565b5b600082013567ffffffffffffffff811115611cfa57611cf961153d565b5b611d0684828501611846565b91505092915050565b611d1881611789565b82525050565b6000602082019050611d336000830184611d0f565b92915050565b60008083601f840112611d4f57611d4e611542565b5b8235905067ffffffffffffffff811115611d6c57611d6b611547565b5b602083019150836001820283011115611d8857611d8761154c565b5b9250929050565b60008060008060408587031215611da957611da8611538565b5b600085013567ffffffffffffffff811115611dc757611dc661153d565b5b611dd387828801611551565b9450945050602085013567ffffffffffffffff811115611df657611df561153d565b5b611e0287828801611d39565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600161016003833603038112611e6b57611e6a611e3f565b5b80830191505092915050565b60008083356001602003843603038112611e9457611e93611e3f565b5b80840192508235915067ffffffffffffffff821115611eb657611eb5611e44565b5b602083019250600182023603831315611ed257611ed1611e49565b5b509250929050565b60008060408385031215611ef157611ef0611538565b5b6000611eff858286016117aa565b9250506020611f10858286016117aa565b9150509250929050565b6000604082019050611f2f6000830185611d0f565b611f3c6020830184611d0f565b9392505050565b611f4c81611b3d565b82525050565b6000602082019050611f676000830184611f43565b92915050565b600067ffffffffffffffff821115611f8857611f876116ab565b5b602082029050919050565b600081519050611fa281611793565b92915050565b6000611fbb611fb684611f6d565b61170b565b90508060208402830185811115611fd557611fd461154c565b5b835b81811015611ffe5780611fea8882611f93565b845260208401935050602081019050611fd7565b5050509392505050565b600082601f83011261201d5761201c611542565b5b600461202a848285611fa8565b91505092915050565b60006080828403121561204957612048611538565b5b600061205784828501612008565b91505092915050565b600067ffffffffffffffff82111561207b5761207a6116ab565b5b602082029050919050565b600061209961209484612060565b61170b565b905080602084028301858111156120b3576120b261154c565b5b835b818110156120dc57806120c888826117aa565b8452602084019350506020810190506120b5565b5050509392505050565b600082601f8301126120fb576120fa611542565b5b6002612108848285612086565b91505092915050565b60006040828403121561212757612126611538565b5b6000612135848285016120e6565b91505092915050565b600061214a3683611874565b9050919050565b600081905092915050565b61216581611789565b82525050565b6000612177838361215c565b60208301905092915050565b61218c81611a39565b6121968184612151565b92506121a182611a4f565b8060005b838110156121d25781516121b9878261216b565b96506121c483611a80565b9250506001810190506121a5565b505050505050565b600081905092915050565b6121ee81611bb9565b6121f881846121da565b925061220382611bcf565b8060005b8381101561223457815161221b878261216b565b965061222683611bd9565b925050600181019050612207565b505050505050565b6000610100820190506122526000830186612183565b61225f60408301856121e5565b61226c60c0830184612183565b949350505050565b60008115159050919050565b61228981612274565b811461229457600080fd5b50565b6000815190506122a681612280565b92915050565b6000602082840312156122c2576122c1611538565b5b60006122d084828501612297565b91505092915050565b600082825260208201905092915050565b7f424c533a2077726f6e6720736967000000000000000000000000000000000000600082015250565b6000612320600e836122d9565b915061232b826122ea565b602082019050919050565b6000602082019050818103600083015261234f81612313565b9050919050565b7f6461746120746f6f2073686f727420666f722073696700000000000000000000600082015250565b600061238c6016836122d9565b915061239782612356565b602082019050919050565b600060208201905081810360008301526123bb8161237f565b9050919050565b7f424c533a20696e76616c6964207369676e617475726500000000000000000000600082015250565b60006123f86016836122d9565b9150612403826123c2565b602082019050919050565b60006020820190508181036000830152612427816123eb565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081905092915050565b61246e81611bb9565b612478818461245a565b925061248382611bcf565b8060005b838110156124b457815161249b878261216b565b96506124a683611bd9565b925050600181019050612487565b505050505050565b60006124c88383612465565b60808301905092915050565b6000602082019050919050565b60006124ec8261242e565b6124f68185612439565b93506125018361244a565b8060005b8381101561253257815161251988826124bc565b9750612524836124d4565b925050600181019050612505565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081905092915050565b61257f81611a39565b612589818461256b565b925061259482611a4f565b8060005b838110156125c55781516125ac878261216b565b96506125b783611a80565b925050600181019050612598565b505050505050565b60006125d98383612576565b60408301905092915050565b6000602082019050919050565b60006125fd8261253f565b612607818561254a565b93506126128361255b565b8060005b8381101561264357815161262a88826125cd565b9750612635836125e5565b925050600181019050612616565b5085935050505092915050565b60006080820190506126656000830186612183565b818103604083015261267781856124e1565b9050818103606083015261268b81846125f2565b9050949350505050565b7f424c533a2076616c69646174655369676e617475726573206661696c65640000600082015250565b60006126cb601e836122d9565b91506126d682612695565b602082019050919050565b600060208201905081810360008301526126fa816126be565b9050919050565b6000819050919050565b61271c612717826114fa565b612701565b82525050565b600061272e828461270b565b60208201915081905092915050565b612746816114fa565b82525050565b600082825260208201905092915050565b6000612768826115f4565b612772818561274c565b9350612782818560208601611610565b61278b8161163a565b840191505092915050565b60006040820190506127ab600083018561273d565b81810360208301526127bd818461275d565b90509392505050565b60006127d96127d484612060565b61170b565b905080602084028301858111156127f3576127f261154c565b5b835b8181101561281c57806128088882611f93565b8452602084019350506020810190506127f5565b5050509392505050565b600082601f83011261283b5761283a611542565b5b60026128488482856127c6565b91505092915050565b60006040828403121561286757612866611538565b5b600061287584828501612826565b91505092915050565b6128878161174b565b82525050565b60006080820190506128a26000830187611504565b6128af6020830186611504565b6128bc604083018561287e565b6128c96060830184611d0f565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f557365206a6163446f75626c652066756e6374696f6e20696e73746561640000600082015250565b6000612937601e836122d9565b915061294282612901565b602082019050919050565b600060208201905081810360008301526129668161292a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006129a782611789565b91506129b283611789565b92508282039050818111156129ca576129c961296d565b5b92915050565b6000610140820190506129e6600083018d61287e565b6129f3602083018c611d0f565b612a00604083018b611504565b612a0d606083018a611504565b612a1a6080830189611d0f565b612a2760a0830188611d0f565b612a3460c0830187611d0f565b612a4160e0830186611d0f565b612a4f610100830185611d0f565b612a5d610120830184611504565b9b9a5050505050505050505050565b7f496e76616c6964206e756d626572000000000000000000000000000000000000600082015250565b6000612aa2600e836122d9565b9150612aad82612a6c565b602082019050919050565b60006020820190508181036000830152612ad181612a95565b9050919050565b6000612ae382611789565b9150612aee83611789565b925082612afe57612afd6128d2565b5b828204905092915050565b6000612b1482611789565b9150612b1f83611789565b9250828202612b2d81611789565b91508282048414831517612b4457612b4361296d565b5b509291505056fea264697066735822122044205410f072296ca8620263d36dd0180dc35669acc16d8126fe61a984aa8a7064736f6c63430008180033";

type BLSSignatureAggregatorConstructorParams =
  | [
      linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSSignatureAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BLSSignatureAggregator__factory extends ContractFactory {
  constructor(...args: BLSSignatureAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BLSSignatureAggregator__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BLSSignatureAggregatorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b745eded4b1aee1100521038d570dd85f1\\$__", "g"),
      linkLibraryAddresses["contracts/samples/bls/lib/BLSOpen.sol:BLSOpen"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BLSSignatureAggregator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BLSSignatureAggregator__factory {
    return super.connect(runner) as BLSSignatureAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSSignatureAggregatorInterface {
    return new Interface(_abi) as BLSSignatureAggregatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BLSSignatureAggregator {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BLSSignatureAggregator;
  }
}

export interface BLSSignatureAggregatorLibraryAddresses {
  ["contracts/samples/bls/lib/BLSOpen.sol:BLSOpen"]: string;
}
