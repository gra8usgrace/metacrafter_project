/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestExpiryAccount,
  TestExpiryAccountInterface,
} from "../../../contracts/test/TestExpiryAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_after",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_until",
        type: "uint48",
      },
    ],
    name: "addTemporaryOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerAfter",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerUntil",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50604051620037723803806200377283398181016040528101906200006a919062000137565b808073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000af620000b760201b60201c565b505062000169565b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000eb82620000be565b9050919050565b6000620000ff82620000de565b9050919050565b6200011181620000f2565b81146200011d57600080fd5b50565b600081519050620001318162000106565b92915050565b60006020828403121562000150576200014f620000b9565b5b6000620001608482850162000120565b91505092915050565b60805160a0516135c0620001b260003960008181610c7e01526117a0015260008181610767015281816107f501528181610a6101528181610aef0152610b9f01526135c06000f3fe60806040526004361061012d5760003560e01c80634f1ef286116100ab578063bc197c811161006f578063bc197c81146103de578063c399ec881461041b578063c4d66de814610446578063cf6dca551461046f578063d087d28814610498578063f23a6e61146104c357610134565b80634f1ef2861461031857806352d1902d146103345780638da5cb5b1461035f578063b0d691fe1461038a578063b61d27f6146103b557610134565b80633a871cdd116100f25780633a871cdd1461022e5780633e4769511461026b5780633fb5a7a1146102a85780634a58db19146102e55780634d44560d146102ef57610134565b806223de291461013957806301ffc9a714610162578063150b7a021461019f57806318dfb3c7146101dc5780633659cfe61461020557610134565b3661013457005b600080fd5b34801561014557600080fd5b50610160600480360381019061015b9190611f00565b610500565b005b34801561016e57600080fd5b5061018960048036038101906101849190612027565b61050a565b604051610196919061206f565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c1919061208a565b610644565b6040516101d39190612121565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe91906121e8565b610659565b005b34801561021157600080fd5b5061022c60048036038101906102279190612269565b610765565b005b34801561023a57600080fd5b50610255600480360381019061025091906122f1565b6108ed565b604051610262919061236f565b60405180910390f35b34801561027757600080fd5b50610292600480360381019061028d9190612269565b610920565b60405161029f91906123ab565b60405180910390f35b3480156102b457600080fd5b506102cf60048036038101906102ca9190612269565b610945565b6040516102dc91906123ab565b60405180910390f35b6102ed61096a565b005b3480156102fb57600080fd5b5061031660048036038101906103119190612404565b6109df565b005b610332600480360381019061032d9190612585565b610a5f565b005b34801561034057600080fd5b50610349610b9b565b60405161035691906125f0565b60405180910390f35b34801561036b57600080fd5b50610374610c54565b604051610381919061261a565b60405180910390f35b34801561039657600080fd5b5061039f610c7a565b6040516103ac9190612694565b60405180910390f35b3480156103c157600080fd5b506103dc60048036038101906103d791906126af565b610ca2565b005b3480156103ea57600080fd5b5061040560048036038101906104009190612779565b610cff565b6040516104129190612121565b60405180910390f35b34801561042757600080fd5b50610430610d17565b60405161043d919061236f565b60405180910390f35b34801561045257600080fd5b5061046d60048036038101906104689190612269565b610d9f565b005b34801561047b57600080fd5b5061049660048036038101906104919190612881565b610ef1565b005b3480156104a457600080fd5b506104ad611014565b6040516104ba919061236f565b60405180910390f35b3480156104cf57600080fd5b506104ea60048036038101906104e591906128d4565b61109f565b6040516104f79190612121565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105d557507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061063d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600063150b7a0260e01b905095945050505050565b6106616110b5565b8181905084849050146106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a0906129cb565b60405180910390fd5b60005b8484905081101561075e576107518585838181106106cd576106cc6129eb565b5b90506020020160208101906106e29190612269565b60008585858181106106f7576106f66129eb565b5b90506020028101906107099190612a29565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611184565b80806001019150506106ac565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90612afe565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610832611208565b73ffffffffffffffffffffffffffffffffffffffff1614610888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087f90612b90565b60405180910390fd5b6108918161125f565b6108ea81600067ffffffffffffffff8111156108b0576108af61245a565b5b6040519080825280601f01601f1916602001820160405280156108e25781602001600182028036833780820191505090505b50600061126a565b50565b60006108f76113d8565b610901848461144f565b9050610910846020013561159a565b6109198261159d565b9392505050565b60026020528060005260406000206000915054906101000a900465ffffffffffff1681565b60016020528060005260406000206000915054906101000a900465ffffffffffff1681565b610972610c7a565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b81526004016109ab919061261a565b6000604051808303818588803b1580156109c457600080fd5b505af11580156109d8573d6000803e3d6000fd5b5050505050565b6109e7611639565b6109ef610c7a565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610a29929190612bbf565b600060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490612afe565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b2c611208565b73ffffffffffffffffffffffffffffffffffffffff1614610b82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7990612b90565b60405180910390fd5b610b8b8261125f565b610b978282600161126a565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2290612c5a565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610caa6110b5565b610cf9848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611184565b50505050565b600063bc197c8160e01b905098975050505050505050565b6000610d21610c7a565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d59919061261a565b602060405180830381865afa158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a9190612c8f565b905090565b60008060019054906101000a900460ff16159050808015610dd05750600160008054906101000a900460ff1660ff16105b80610dfd5750610ddf30611701565b158015610dfc5750600160008054906101000a900460ff1660ff16145b5b610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3390612d2e565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610e79576001600060016101000a81548160ff0219169083151502179055505b610e8282611724565b610e9482600065ffffffffffff610ef1565b8015610eed5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610ee49190612d96565b60405180910390a15b5050565b610ef9611639565b8165ffffffffffff168165ffffffffffff1611610f4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4290612dfd565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548165ffffffffffff021916908365ffffffffffff16021790555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050565b600061101e610c7a565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b8152600401611059929190612e7c565b602060405180830381865afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a9190612c8f565b905090565b600063f23a6e6160e01b90509695505050505050565b6110bd610c7a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806111435750600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117990612ef1565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516111ad9190612f82565b60006040518083038185875af1925050503d80600081146111ea576040519150601f19603f3d011682016040523d82523d6000602084013e6111ef565b606091505b50915091508161120157805160208201fd5b5050505050565b60006112367f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611804565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611267611639565b50565b6112967f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b61180e565b60000160009054906101000a900460ff16156112ba576112b583611818565b6113d3565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561132257506040513d601f19601f8201168201806040525081019061131f9190612fae565b60015b611361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113589061304d565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146113c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bd906130df565b60405180910390fd5b506113d28383836118d1565b5b505050565b6113e0610c7a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461144d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114449061314b565b60405180910390fd5b565b60008061145b836118fd565b905060006114c5858061014001906114739190612a29565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508361193390919063ffffffff16565b90506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900465ffffffffffff1690506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900465ffffffffffff1690506000808365ffffffffffff1614905061158d81848461195a565b9550505050505092915050565b50565b600081146116365760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516115ed90613191565b600060405180830381858888f193505050503d806000811461162b576040519150601f19603f3d011682016040523d82523d6000602084013e611630565b606091505b50509050505b50565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806116c057503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6116ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f6906131f2565b60405180910390fd5b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b80600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de60405160405180910390a350565b6000819050919050565b6000819050919050565b61182181611701565b611860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185790613284565b60405180910390fd5b8061188d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611804565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6118da83611993565b6000825111806118e75750805b156118f8576118f683836119e2565b505b505050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b60008060006119428585611a0f565b9150915061194f81611a60565b819250505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85611982576000611985565b60015b60ff16171790509392505050565b61199c81611818565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611a07838360405180606001604052806027815260200161356460279139611bc6565b905092915050565b6000806041835103611a505760008060006020860151925060408601519150606086015160001a9050611a4487828585611c4c565b94509450505050611a59565b60006002915091505b9250929050565b60006004811115611a7457611a736132a4565b5b816004811115611a8757611a866132a4565b5b0315611bc35760016004811115611aa157611aa06132a4565b5b816004811115611ab457611ab36132a4565b5b03611af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aeb9061331f565b60405180910390fd5b60026004811115611b0857611b076132a4565b5b816004811115611b1b57611b1a6132a4565b5b03611b5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b529061338b565b60405180910390fd5b60036004811115611b6f57611b6e6132a4565b5b816004811115611b8257611b816132a4565b5b03611bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb99061341d565b60405180910390fd5b5b50565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611bf09190612f82565b600060405180830381855af49150503d8060008114611c2b576040519150601f19603f3d011682016040523d82523d6000602084013e611c30565b606091505b5091509150611c4186838387611d2e565b925050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611c87576000600391509150611d25565b600060018787878760405160008152602001604052604051611cac949392919061344c565b6020604051602081039080840390855afa158015611cce573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d1c57600060019250925050611d25565b80600092509250505b94509492505050565b60608315611d90576000835103611d8857611d4885611701565b611d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7e906134dd565b60405180910390fd5b5b829050611d9b565b611d9a8383611da3565b5b949350505050565b600082511115611db65781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dea9190613541565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e3282611e07565b9050919050565b611e4281611e27565b8114611e4d57600080fd5b50565b600081359050611e5f81611e39565b92915050565b6000819050919050565b611e7881611e65565b8114611e8357600080fd5b50565b600081359050611e9581611e6f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611ec057611ebf611e9b565b5b8235905067ffffffffffffffff811115611edd57611edc611ea0565b5b602083019150836001820283011115611ef957611ef8611ea5565b5b9250929050565b60008060008060008060008060c0898b031215611f2057611f1f611dfd565b5b6000611f2e8b828c01611e50565b9850506020611f3f8b828c01611e50565b9750506040611f508b828c01611e50565b9650506060611f618b828c01611e86565b955050608089013567ffffffffffffffff811115611f8257611f81611e02565b5b611f8e8b828c01611eaa565b945094505060a089013567ffffffffffffffff811115611fb157611fb0611e02565b5b611fbd8b828c01611eaa565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61200481611fcf565b811461200f57600080fd5b50565b60008135905061202181611ffb565b92915050565b60006020828403121561203d5761203c611dfd565b5b600061204b84828501612012565b91505092915050565b60008115159050919050565b61206981612054565b82525050565b60006020820190506120846000830184612060565b92915050565b6000806000806000608086880312156120a6576120a5611dfd565b5b60006120b488828901611e50565b95505060206120c588828901611e50565b94505060406120d688828901611e86565b935050606086013567ffffffffffffffff8111156120f7576120f6611e02565b5b61210388828901611eaa565b92509250509295509295909350565b61211b81611fcf565b82525050565b60006020820190506121366000830184612112565b92915050565b60008083601f84011261215257612151611e9b565b5b8235905067ffffffffffffffff81111561216f5761216e611ea0565b5b60208301915083602082028301111561218b5761218a611ea5565b5b9250929050565b60008083601f8401126121a8576121a7611e9b565b5b8235905067ffffffffffffffff8111156121c5576121c4611ea0565b5b6020830191508360208202830111156121e1576121e0611ea5565b5b9250929050565b6000806000806040858703121561220257612201611dfd565b5b600085013567ffffffffffffffff8111156122205761221f611e02565b5b61222c8782880161213c565b9450945050602085013567ffffffffffffffff81111561224f5761224e611e02565b5b61225b87828801612192565b925092505092959194509250565b60006020828403121561227f5761227e611dfd565b5b600061228d84828501611e50565b91505092915050565b600080fd5b600061016082840312156122b2576122b1612296565b5b81905092915050565b6000819050919050565b6122ce816122bb565b81146122d957600080fd5b50565b6000813590506122eb816122c5565b92915050565b60008060006060848603121561230a57612309611dfd565b5b600084013567ffffffffffffffff81111561232857612327611e02565b5b6123348682870161229b565b9350506020612345868287016122dc565b925050604061235686828701611e86565b9150509250925092565b61236981611e65565b82525050565b60006020820190506123846000830184612360565b92915050565b600065ffffffffffff82169050919050565b6123a58161238a565b82525050565b60006020820190506123c0600083018461239c565b92915050565b60006123d182611e07565b9050919050565b6123e1816123c6565b81146123ec57600080fd5b50565b6000813590506123fe816123d8565b92915050565b6000806040838503121561241b5761241a611dfd565b5b6000612429858286016123ef565b925050602061243a85828601611e86565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61249282612449565b810181811067ffffffffffffffff821117156124b1576124b061245a565b5b80604052505050565b60006124c4611df3565b90506124d08282612489565b919050565b600067ffffffffffffffff8211156124f0576124ef61245a565b5b6124f982612449565b9050602081019050919050565b82818337600083830152505050565b6000612528612523846124d5565b6124ba565b90508281526020810184848401111561254457612543612444565b5b61254f848285612506565b509392505050565b600082601f83011261256c5761256b611e9b565b5b813561257c848260208601612515565b91505092915050565b6000806040838503121561259c5761259b611dfd565b5b60006125aa85828601611e50565b925050602083013567ffffffffffffffff8111156125cb576125ca611e02565b5b6125d785828601612557565b9150509250929050565b6125ea816122bb565b82525050565b600060208201905061260560008301846125e1565b92915050565b61261481611e27565b82525050565b600060208201905061262f600083018461260b565b92915050565b6000819050919050565b600061265a61265561265084611e07565b612635565b611e07565b9050919050565b600061266c8261263f565b9050919050565b600061267e82612661565b9050919050565b61268e81612673565b82525050565b60006020820190506126a96000830184612685565b92915050565b600080600080606085870312156126c9576126c8611dfd565b5b60006126d787828801611e50565b94505060206126e887828801611e86565b935050604085013567ffffffffffffffff81111561270957612708611e02565b5b61271587828801611eaa565b925092505092959194509250565b60008083601f84011261273957612738611e9b565b5b8235905067ffffffffffffffff81111561275657612755611ea0565b5b60208301915083602082028301111561277257612771611ea5565b5b9250929050565b60008060008060008060008060a0898b03121561279957612798611dfd565b5b60006127a78b828c01611e50565b98505060206127b88b828c01611e50565b975050604089013567ffffffffffffffff8111156127d9576127d8611e02565b5b6127e58b828c01612723565b9650965050606089013567ffffffffffffffff81111561280857612807611e02565b5b6128148b828c01612723565b9450945050608089013567ffffffffffffffff81111561283757612836611e02565b5b6128438b828c01611eaa565b92509250509295985092959890939650565b61285e8161238a565b811461286957600080fd5b50565b60008135905061287b81612855565b92915050565b60008060006060848603121561289a57612899611dfd565b5b60006128a886828701611e50565b93505060206128b98682870161286c565b92505060406128ca8682870161286c565b9150509250925092565b60008060008060008060a087890312156128f1576128f0611dfd565b5b60006128ff89828a01611e50565b965050602061291089828a01611e50565b955050604061292189828a01611e86565b945050606061293289828a01611e86565b935050608087013567ffffffffffffffff81111561295357612952611e02565b5b61295f89828a01611eaa565b92509250509295509295509295565b600082825260208201905092915050565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b60006129b560138361296e565b91506129c08261297f565b602082019050919050565b600060208201905081810360008301526129e4816129a8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612a4657612a45612a1a565b5b80840192508235915067ffffffffffffffff821115612a6857612a67612a1f565b5b602083019250600182023603831315612a8457612a83612a24565b5b509250929050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b6000612ae8602c8361296e565b9150612af382612a8c565b604082019050919050565b60006020820190508181036000830152612b1781612adb565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000612b7a602c8361296e565b9150612b8582612b1e565b604082019050919050565b60006020820190508181036000830152612ba981612b6d565b9050919050565b612bb9816123c6565b82525050565b6000604082019050612bd46000830185612bb0565b612be16020830184612360565b9392505050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000612c4460388361296e565b9150612c4f82612be8565b604082019050919050565b60006020820190508181036000830152612c7381612c37565b9050919050565b600081519050612c8981611e6f565b92915050565b600060208284031215612ca557612ca4611dfd565b5b6000612cb384828501612c7a565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612d18602e8361296e565b9150612d2382612cbc565b604082019050919050565b60006020820190508181036000830152612d4781612d0b565b9050919050565b6000819050919050565b600060ff82169050919050565b6000612d80612d7b612d7684612d4e565b612635565b612d58565b9050919050565b612d9081612d65565b82525050565b6000602082019050612dab6000830184612d87565b92915050565b7f77726f6e6720756e74696c2f6166746572000000000000000000000000000000600082015250565b6000612de760118361296e565b9150612df282612db1565b602082019050919050565b60006020820190508181036000830152612e1681612dda565b9050919050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e66612e61612e5c84612e1d565b612635565b612e27565b9050919050565b612e7681612e4b565b82525050565b6000604082019050612e91600083018561260b565b612e9e6020830184612e6d565b9392505050565b7f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74600082015250565b6000612edb60208361296e565b9150612ee682612ea5565b602082019050919050565b60006020820190508181036000830152612f0a81612ece565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612f45578082015181840152602081019050612f2a565b60008484015250505050565b6000612f5c82612f11565b612f668185612f1c565b9350612f76818560208601612f27565b80840191505092915050565b6000612f8e8284612f51565b915081905092915050565b600081519050612fa8816122c5565b92915050565b600060208284031215612fc457612fc3611dfd565b5b6000612fd284828501612f99565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000613037602e8361296e565b915061304282612fdb565b604082019050919050565b600060208201905081810360008301526130668161302a565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b60006130c960298361296e565b91506130d48261306d565b604082019050919050565b600060208201905081810360008301526130f8816130bc565b9050919050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000613135601c8361296e565b9150613140826130ff565b602082019050919050565b6000602082019050818103600083015261316481613128565b9050919050565b50565b600061317b600083612f1c565b91506131868261316b565b600082019050919050565b600061319c8261316e565b9150819050919050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b60006131dc600a8361296e565b91506131e7826131a6565b602082019050919050565b6000602082019050818103600083015261320b816131cf565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600061326e602d8361296e565b915061327982613212565b604082019050919050565b6000602082019050818103600083015261329d81613261565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061330960188361296e565b9150613314826132d3565b602082019050919050565b60006020820190508181036000830152613338816132fc565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613375601f8361296e565b91506133808261333f565b602082019050919050565b600060208201905081810360008301526133a481613368565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061340760228361296e565b9150613412826133ab565b604082019050919050565b60006020820190508181036000830152613436816133fa565b9050919050565b61344681612d58565b82525050565b600060808201905061346160008301876125e1565b61346e602083018661343d565b61347b60408301856125e1565b61348860608301846125e1565b95945050505050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006134c7601d8361296e565b91506134d282613491565b602082019050919050565b600060208201905081810360008301526134f6816134ba565b9050919050565b600081519050919050565b6000613513826134fd565b61351d818561296e565b935061352d818560208601612f27565b61353681612449565b840191505092915050565b6000602082019050818103600083015261355b8184613508565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122072c4efb3fcc6bed1edb7996ae7bf90b08aa32a4f3f7ded050f2f57b12209b42664736f6c63430008180033";

type TestExpiryAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestExpiryAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestExpiryAccount__factory extends ContractFactory {
  constructor(...args: TestExpiryAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override deploy(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(anEntryPoint, overrides || {}) as Promise<
      TestExpiryAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestExpiryAccount__factory {
    return super.connect(runner) as TestExpiryAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExpiryAccountInterface {
    return new Interface(_abi) as TestExpiryAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestExpiryAccount {
    return new Contract(address, _abi, runner) as unknown as TestExpiryAccount;
  }
}
