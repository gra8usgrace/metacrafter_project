/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  StorageAccessible,
  StorageAccessibleInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/common/StorageAccessible";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getStorageAt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "calldataPayload",
        type: "bytes",
      },
    ],
    name: "simulateAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061050d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635624b25b1461003b578063b4faba091461006b575b600080fd5b61005560048036038101906100509190610185565b610087565b6040516100629190610255565b60405180910390f35b6100856004803603810190610080919061040a565b610119565b005b606060006020836100989190610495565b67ffffffffffffffff8111156100b1576100b06102df565b5b6040519080825280601f01601f1916602001820160405280156100e35781602001600182028036833780820191505090505b50905060005b8381101561010e578085015480602083026020850101525080806001019150506100e9565b508091505092915050565b600080825160208401855af4806000523d6020523d600060403e60403d016000fd5b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6101628161014f565b811461016d57600080fd5b50565b60008135905061017f81610159565b92915050565b6000806040838503121561019c5761019b610145565b5b60006101aa85828601610170565b92505060206101bb85828601610170565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101ff5780820151818401526020810190506101e4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610227826101c5565b61023181856101d0565b93506102418185602086016101e1565b61024a8161020b565b840191505092915050565b6000602082019050818103600083015261026f818461021c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a282610277565b9050919050565b6102b281610297565b81146102bd57600080fd5b50565b6000813590506102cf816102a9565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103178261020b565b810181811067ffffffffffffffff82111715610336576103356102df565b5b80604052505050565b600061034961013b565b9050610355828261030e565b919050565b600067ffffffffffffffff821115610375576103746102df565b5b61037e8261020b565b9050602081019050919050565b82818337600083830152505050565b60006103ad6103a88461035a565b61033f565b9050828152602081018484840111156103c9576103c86102da565b5b6103d484828561038b565b509392505050565b600082601f8301126103f1576103f06102d5565b5b813561040184826020860161039a565b91505092915050565b6000806040838503121561042157610420610145565b5b600061042f858286016102c0565b925050602083013567ffffffffffffffff8111156104505761044f61014a565b5b61045c858286016103dc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104a08261014f565b91506104ab8361014f565b92508282026104b98161014f565b915082820484148315176104d0576104cf610466565b5b509291505056fea264697066735822122036c54144381cf9ef60da09e6bd17d60e57491589a8134a9e38e353c09d51629364736f6c63430008180033";

type StorageAccessibleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageAccessibleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorageAccessible__factory extends ContractFactory {
  constructor(...args: StorageAccessibleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StorageAccessible & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StorageAccessible__factory {
    return super.connect(runner) as StorageAccessible__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageAccessibleInterface {
    return new Interface(_abi) as StorageAccessibleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StorageAccessible {
    return new Contract(address, _abi, runner) as unknown as StorageAccessible;
  }
}
