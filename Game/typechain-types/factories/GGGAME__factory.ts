/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { GGGAME, GGGAMEInterface } from "../GGGAME";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Invalid__redeemptionAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "gameItems",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060400160405280601381526020017f47726163696f757320446567656e2047616d6500000000000000000000000000815250600190816200004a91906200038f565b506040518060400160405280600481526020017f4744544b00000000000000000000000000000000000000000000000000000000815250600290816200009191906200038f565b50633b9aca00600355348015620000a757600080fd5b5060405162001887380380620018878339818101604052810190620000cd9190620004e0565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000512565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200019757607f821691505b602082108103620001ad57620001ac6200014f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001d8565b620002238683620001d8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002706200026a62000264846200023b565b62000245565b6200023b565b9050919050565b6000819050919050565b6200028c836200024f565b620002a46200029b8262000277565b848454620001e5565b825550505050565b600090565b620002bb620002ac565b620002c881848462000281565b505050565b5b81811015620002f057620002e4600082620002b1565b600181019050620002ce565b5050565b601f8211156200033f576200030981620001b3565b6200031484620001c8565b8101602085101562000324578190505b6200033c6200033385620001c8565b830182620002cd565b50505b505050565b600082821c905092915050565b6000620003646000198460080262000344565b1980831691505092915050565b60006200037f838362000351565b9150826002028217905092915050565b6200039a8262000115565b67ffffffffffffffff811115620003b657620003b562000120565b5b620003c282546200017e565b620003cf828285620002f4565b600060209050601f831160018114620004075760008415620003f2578287015190505b620003fe858262000371565b8655506200046e565b601f1984166200041786620001b3565b60005b8281101562000441578489015182556001820191506020850194506020810190506200041a565b868310156200046157848901516200045d601f89168262000351565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004a8826200047b565b9050919050565b620004ba816200049b565b8114620004c657600080fd5b50565b600081519050620004da81620004af565b92915050565b600060208284031215620004f957620004f862000476565b5b60006200050984828501620004c9565b91505092915050565b61136580620005226000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063819d246611610071578063819d24661461016857806395d89b4114610198578063a0712d68146101b6578063a9059cbb146101e6578063db006a7514610216578063dd62ed3e14610232576100a9565b806306fdde03146100ae57806318160ddd146100cc578063313ce567146100ea57806342966c681461010857806370a0823114610138575b600080fd5b6100b6610262565b6040516100c39190610b2e565b60405180910390f35b6100d46102f0565b6040516100e19190610b69565b60405180910390f35b6100f26102f6565b6040516100ff9190610b69565b60405180910390f35b610122600480360381019061011d9190610bb5565b6102fc565b60405161012f9190610bfd565b60405180910390f35b610152600480360381019061014d9190610c76565b6103f8565b60405161015f9190610b69565b60405180910390f35b610182600480360381019061017d9190610c76565b610410565b60405161018f9190610b2e565b60405180910390f35b6101a06104b0565b6040516101ad9190610b2e565b60405180910390f35b6101d060048036038101906101cb9190610bb5565b61053e565b6040516101dd9190610bfd565b60405180910390f35b61020060048036038101906101fb9190610ca3565b610648565b60405161020d9190610bfd565b60405180910390f35b610230600480360381019061022b9190610bb5565b61084c565b005b61024c60048036038101906102479190610ce3565b610a79565b6040516102599190610b69565b60405180910390f35b6001805461026f90610d52565b80601f016020809104026020016040519081016040528092919081815260200182805461029b90610d52565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b505050505081565b60045481565b60035481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610dcf565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103cf9190610e1e565b9250508190555081600460008282546103e89190610e1e565b9250508190555060019050919050565b60056020528060005260406000206000915090505481565b6000602052806000526040600020600091509050805461042f90610d52565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90610d52565b80156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b505050505081565b600280546104bd90610d52565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990610d52565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b505050505081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610e9e565b60405180910390fd5b81600460008282546105e29190610ebe565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106389190610ebe565b9250508190555060019050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106af90610f64565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610731576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107809190610e1e565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d69190610ebe565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083a9190610b69565b60405180910390a36001905092915050565b6000811161088f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088690610ff6565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090890611062565b60405180910390fd5b6101f481036109a0576040518060400160405280600781526020017f47475f5041434b000000000000000000000000000000000000000000000000008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908161099a919061125d565b50610a6c565b60648103610a2e576040518060400160405280600e81526020017f47475f4e4f524d414c5f5041434b0000000000000000000000000000000000008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081610a28919061125d565b50610a6b565b806040517f9009a9fb000000000000000000000000000000000000000000000000000000008152600401610a629190610b69565b60405180910390fd5b5b610a75816102fc565b5050565b6006602052816000526040600020602052806000526040600020600091509150505481565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad8578082015181840152602081019050610abd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b0082610a9e565b610b0a8185610aa9565b9350610b1a818560208601610aba565b610b2381610ae4565b840191505092915050565b60006020820190508181036000830152610b488184610af5565b905092915050565b6000819050919050565b610b6381610b50565b82525050565b6000602082019050610b7e6000830184610b5a565b92915050565b600080fd5b610b9281610b50565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b600060208284031215610bcb57610bca610b84565b5b6000610bd984828501610ba0565b91505092915050565b60008115159050919050565b610bf781610be2565b82525050565b6000602082019050610c126000830184610bee565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c4382610c18565b9050919050565b610c5381610c38565b8114610c5e57600080fd5b50565b600081359050610c7081610c4a565b92915050565b600060208284031215610c8c57610c8b610b84565b5b6000610c9a84828501610c61565b91505092915050565b60008060408385031215610cba57610cb9610b84565b5b6000610cc885828601610c61565b9250506020610cd985828601610ba0565b9150509250929050565b60008060408385031215610cfa57610cf9610b84565b5b6000610d0885828601610c61565b9250506020610d1985828601610c61565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d6a57607f821691505b602082108103610d7d57610d7c610d23565b5b50919050565b7f6e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b6000610db9601183610aa9565b9150610dc482610d83565b602082019050919050565b60006020820190508181036000830152610de881610dac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e2982610b50565b9150610e3483610b50565b9250828203905081811115610e4c57610e4b610def565b5b92915050565b7f4f6e6c79206f776e65722063616e206d696e7400000000000000000000000000600082015250565b6000610e88601383610aa9565b9150610e9382610e52565b602082019050919050565b60006020820190508181036000830152610eb781610e7b565b9050919050565b6000610ec982610b50565b9150610ed483610b50565b9250828201905080821115610eec57610eeb610def565b5b92915050565b7f45524332303a205472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000610f4e602383610aa9565b9150610f5982610ef2565b604082019050919050565b60006020820190508181036000830152610f7d81610f41565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fe0602183610aa9565b9150610feb82610f84565b604082019050919050565b6000602082019050818103600083015261100f81610fd3565b9050919050565b7f496e73756666696369656e742062616c616e63652e0000000000000000000000600082015250565b600061104c601583610aa9565b915061105782611016565b602082019050919050565b6000602082019050818103600083015261107b8161103f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110d6565b61111d86836110d6565b95508019841693508086168417925050509392505050565b6000819050919050565b600061115a61115561115084610b50565b611135565b610b50565b9050919050565b6000819050919050565b6111748361113f565b61118861118082611161565b8484546110e3565b825550505050565b600090565b61119d611190565b6111a881848461116b565b505050565b5b818110156111cc576111c1600082611195565b6001810190506111ae565b5050565b601f821115611211576111e2816110b1565b6111eb846110c6565b810160208510156111fa578190505b61120e611206856110c6565b8301826111ad565b50505b505050565b600082821c905092915050565b600061123460001984600802611216565b1980831691505092915050565b600061124d8383611223565b9150826002028217905092915050565b61126682610a9e565b67ffffffffffffffff81111561127f5761127e611082565b5b6112898254610d52565b6112948282856111d0565b600060209050601f8311600181146112c757600084156112b5578287015190505b6112bf8582611241565b865550611327565b601f1984166112d5866110b1565b60005b828110156112fd578489015182556001820191506020850194506020810190506112d8565b8683101561131a5784890151611316601f891682611223565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220fc14de3062be7f1862e514e256062fb49eade98964380445f70a8f2da451fedd64736f6c63430008180033";

type GGGAMEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GGGAMEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GGGAME__factory extends ContractFactory {
  constructor(...args: GGGAMEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      GGGAME & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GGGAME__factory {
    return super.connect(runner) as GGGAME__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GGGAMEInterface {
    return new Interface(_abi) as GGGAMEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GGGAME {
    return new Contract(address, _abi, runner) as unknown as GGGAME;
  }
}
