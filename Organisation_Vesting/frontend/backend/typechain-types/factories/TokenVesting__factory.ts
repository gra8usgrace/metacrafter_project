/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TokenVesting, TokenVestingInterface } from "../TokenVesting";

const _abi = [
  {
    inputs: [],
    name: "TokenVesting__AddressNotWhiteListed",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenVesting__TokenAmmountCanNotExceedBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenVesting__Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "beneficiaryTokenAmount",
        type: "uint256",
      },
    ],
    name: "ClaimTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingDuration",
        type: "uint256",
      },
    ],
    name: "StakeholderCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_position",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_vestingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "addBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_organizationAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "addOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "address",
        name: "beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "position",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "vestingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedTokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getBeneficiaryInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiaryAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "position",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedTokenAmount",
            type: "uint256",
          },
        ],
        internalType: "struct TokenVesting.Beneficiary",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "organizations",
    outputs: [
      {
        internalType: "address",
        name: "organizationAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506118d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063380808b111610071578063380808b11461017d57806348c54b9d146101995780635a1f7406146101a35780639b19251a146101d5578063b915dec214610205578063e43252d714610223576100a9565b806301567739146100ae578063155d7480146100e357806318160ddd146100ff57806327e235e31461011d578063366dc0831461014d575b600080fd5b6100c860048036038101906100c39190610e7a565b61023f565b6040516100da96959493929190610f5f565b60405180910390f35b6100fd60048036038101906100f89190611128565b610323565b005b6101076103e2565b6040516101149190611197565b60405180910390f35b61013760048036038101906101329190610e7a565b6103e8565b6040516101449190611197565b60405180910390f35b61016760048036038101906101629190610e7a565b610400565b60405161017491906112a3565b60405180910390f35b610197600480360381019061019291906112c5565b610569565b005b6101a16107f5565b005b6101bd60048036038101906101b89190610e7a565b610b61565b6040516101cc93929190611348565b60405180910390f35b6101ef60048036038101906101ea9190610e7a565b610c33565b6040516101fc91906113a1565b60405180910390f35b61020d610c53565b60405161021a9190611197565b60405180910390f35b61023d60048036038101906102389190610e7a565b610c9a565b005b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610288906113eb565b80601f01602080910402602001604051908101604052809291908181526020018280546102b4906113eb565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b5050505050908060020154908060030154908060040154908060050154905086565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160010190816103ba91906115c8565b50818160020181905550816000808282546103d591906116c9565b9250508190555050505050565b60005481565b60046020528060005260406000206000915090505481565b610408610dbc565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546104b8906113eb565b80601f01602080910402602001604051908101604052809291908181526020018280546104e4906113eb565b80156105315780601f1061050657610100808354040283529160200191610531565b820191906000526020600020905b81548152906001019060200180831161051457829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610630576040517f89602a2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015410156106ac576040517f4b02deab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020014281526020018281526020016000815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161078b91906115c8565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050155905050427f32d79646ac42b9461c5607826670a169b096d687859d057a149ff00b17c6c845836040516107e79190611197565b60405180910390a250505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610878576040517f9b4645eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806109a657503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b6109e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dc9061176f565b60405180910390fd5b806002015481600301546109f991906116c9565b421015610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a32906117db565b60405180910390fd5b600081600501548260040154610a5191906117fb565b905060008111610a96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8d9061187b565b60405180910390fd5b80826005016000828254610aaa91906116c9565b9250508190555080600460008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167f4d7f917f6b905f28ba5297e6c224a6cfec20ac6a3698a55b412d30b95ad25d2f60405160405180910390a35050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610baa906113eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd6906113eb565b8015610c235780601f10610bf857610100808354040283529160200191610c23565b820191906000526020600020905b815481529060010190602001808311610c0657829003601f168201915b5050505050908060020154905083565b60026020528060005260406000206000915054906101000a900460ff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b3373ffffffffffffffffffffffffffffffffffffffff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d61576040517f89602a2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4782610e1c565b9050919050565b610e5781610e3c565b8114610e6257600080fd5b50565b600081359050610e7481610e4e565b92915050565b600060208284031215610e9057610e8f610e12565b5b6000610e9e84828501610e65565b91505092915050565b610eb081610e3c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ef0578082015181840152602081019050610ed5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f1882610eb6565b610f228185610ec1565b9350610f32818560208601610ed2565b610f3b81610efc565b840191505092915050565b6000819050919050565b610f5981610f46565b82525050565b600060c082019050610f746000830189610ea7565b8181036020830152610f868188610f0d565b9050610f956040830187610f50565b610fa26060830186610f50565b610faf6080830185610f50565b610fbc60a0830184610f50565b979650505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61100982610efc565b810181811067ffffffffffffffff8211171561102857611027610fd1565b5b80604052505050565b600061103b610e08565b90506110478282611000565b919050565b600067ffffffffffffffff82111561106757611066610fd1565b5b61107082610efc565b9050602081019050919050565b82818337600083830152505050565b600061109f61109a8461104c565b611031565b9050828152602081018484840111156110bb576110ba610fcc565b5b6110c684828561107d565b509392505050565b600082601f8301126110e3576110e2610fc7565b5b81356110f384826020860161108c565b91505092915050565b61110581610f46565b811461111057600080fd5b50565b600081359050611122816110fc565b92915050565b60008060006060848603121561114157611140610e12565b5b600084013567ffffffffffffffff81111561115f5761115e610e17565b5b61116b868287016110ce565b935050602061117c86828701610e65565b925050604061118d86828701611113565b9150509250925092565b60006020820190506111ac6000830184610f50565b92915050565b6111bb81610e3c565b82525050565b600082825260208201905092915050565b60006111dd82610eb6565b6111e781856111c1565b93506111f7818560208601610ed2565b61120081610efc565b840191505092915050565b61121481610f46565b82525050565b600060c08301600083015161123260008601826111b2565b506020830151848203602086015261124a82826111d2565b915050604083015161125f604086018261120b565b506060830151611272606086018261120b565b506080830151611285608086018261120b565b5060a083015161129860a086018261120b565b508091505092915050565b600060208201905081810360008301526112bd818461121a565b905092915050565b600080600080608085870312156112df576112de610e12565b5b60006112ed87828801610e65565b945050602085013567ffffffffffffffff81111561130e5761130d610e17565b5b61131a878288016110ce565b935050604061132b87828801611113565b925050606061133c87828801611113565b91505092959194509250565b600060608201905061135d6000830186610ea7565b818103602083015261136f8185610f0d565b905061137e6040830184610f50565b949350505050565b60008115159050919050565b61139b81611386565b82525050565b60006020820190506113b66000830184611392565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061140357607f821691505b602082108103611416576114156113bc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261147e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611441565b6114888683611441565b95508019841693508086168417925050509392505050565b6000819050919050565b60006114c56114c06114bb84610f46565b6114a0565b610f46565b9050919050565b6000819050919050565b6114df836114aa565b6114f36114eb826114cc565b84845461144e565b825550505050565b600090565b6115086114fb565b6115138184846114d6565b505050565b5b818110156115375761152c600082611500565b600181019050611519565b5050565b601f82111561157c5761154d8161141c565b61155684611431565b81016020851015611565578190505b61157961157185611431565b830182611518565b50505b505050565b600082821c905092915050565b600061159f60001984600802611581565b1980831691505092915050565b60006115b8838361158e565b9150826002028217905092915050565b6115d182610eb6565b67ffffffffffffffff8111156115ea576115e9610fd1565b5b6115f482546113eb565b6115ff82828561153b565b600060209050601f8311600181146116325760008415611620578287015190505b61162a85826115ac565b865550611692565b601f1984166116408661141c565b60005b8281101561166857848901518255600182019150602085019450602081019050611643565b868310156116855784890151611681601f89168261158e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116d482610f46565b91506116df83610f46565b92508282019050808211156116f7576116f661169a565b5b92915050565b7f596f7520617265206e6f74206173736f6369617465642077697468207468697360008201527f206f7267616e697a6174696f6e00000000000000000000000000000000000000602082015250565b6000611759602d83610ec1565b9150611764826116fd565b604082019050919050565b600060208201905081810360008301526117888161174c565b9050919050565b7f56657374696e6720706572696f64206e6f74206f766572207965740000000000600082015250565b60006117c5601b83610ec1565b91506117d08261178f565b602082019050919050565b600060208201905081810360008301526117f4816117b8565b9050919050565b600061180682610f46565b915061181183610f46565b92508282039050818111156118295761182861169a565b5b92915050565b7f4e6f20746f6b656e7320617661696c61626c6520666f7220636c61696d696e67600082015250565b6000611865602083610ec1565b91506118708261182f565b602082019050919050565b6000602082019050818103600083015261189481611858565b905091905056fea26469706673582212202bf470bb3e70f9514a96e6cada7b1039fee062be9e39dfe7cc0718e634405a8364736f6c63430008180033";

type TokenVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenVesting__factory extends ContractFactory {
  constructor(...args: TokenVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenVesting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenVesting__factory {
    return super.connect(runner) as TokenVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenVestingInterface {
    return new Interface(_abi) as TokenVestingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenVesting {
    return new Contract(address, _abi, runner) as unknown as TokenVesting;
  }
}
